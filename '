<script setup>
import TableViewer from './table_viewer.vue';
import { jsPDF, AcroFormTextField, AcroFormButton } from 'jspdf'
import 'jspdf-autotable'

const drawHeader = (doc, data) => {
  const { settings } = data

  if (settings === undefined) return

  doc.setFontSize(15);
  doc.setFont('times', 'bold');
  doc.text("Laporan Inspeksi Harian", settings.margin.left, 20);

  doc.setFontSize(10);
  doc.text("AIS Site", settings.margin.left, 35)
  doc.text("Lingkup Pekerjaan", settings.margin.left, 40)
  doc.text("Tanggal", settings.margin.left, 45)

  doc.setFont('times', 'normal')
  doc.text('Jombang - Mojokerto', 100, 35, {
    align: 'right',
  });
  doc.text('19-Jun-24', 100, 45, {
    align: 'right',
  });

  doc.addImage(
    "/astra-infra-logo.png",
    "PNG",
    220,
    30,
    60,
    15
  )
}

const signField = (doc, name) => {
  const x = 230
  const y = doc.lastAutoTable.finalY

  if (y === undefined)
    return

  doc.setFontSize(10);
  doc.setFont('times', 'normal');

  doc.text("PT. Astra Tol Nusantara - Astra Infra Solutions", x, y + 10, {
    align: 'center'
  })

  doc.text("Staff Inspeksi", x, y + 35, {
    align: 'center'
  })

  doc.setFont('times', 'bold');

  doc.text(name, x, y + 30, {
    align: 'center'
  })

  const textWidth = doc.getTextWidth(name);
  doc.line(x - textWidth / 2, y + 31, x + textWidth / 2, y + 31)
}
const renderImage = (doc, data) => {
  if (data.cell.raw === null) return
  const img = data.cell.raw.children[0]
  const dim = data.cell.height - data.cell.padding('vertical');

  const textPos = data.cell;
  doc.addImage(img.src, 'JPEG', textPos.x, textPos.y, dim, dim)
}

const renderTextField = (doc, data) => {
  const textField = new AcroFormTextField()

  const { x, y, height, width } = data.cell

  textField.x = x
  textField.y = y

  textField.height = height
  textField.width = width

  textField.fieldName = `Rekomendasi Penanganan ${data.column.index % 2 === 0 ? 'Sementara' : 'Permanen'} ${data.row.index + 1}`

  doc.addField(textField)
}

const renderCheckBox = (doc, data) => {
  const checkBox = new AcroFormButton();

  checkBox.fieldName = `Approval Penanganan ${data.column.index % 2 === 0 ? 'Sementara' : 'Permanen'} ${data.row.index + 1}`

  const { x, y, height, width } = data.cell

  checkBox.width = 5
  checkBox.height = 5

  checkBox.x = x + width / 2 - 2.5
  checkBox.y = y + height / 2 - 2.5

  doc.addField(checkBox)

}

const downloadPDF = (arg) => {
  const doc = new jsPDF({
    orientation: "portrait",
    unit: "mm",
    format: "a3",
  })

  doc.autoTable({
    html: '#laporan',
    styles: {
      font: 'times',
      fontSize: 6
    },
    headStyles: { minCellHeight: 10 },
    bodyStyles: { minCellHeight: 50 },
    margin: { top: 50, bottom: 49 },
    columnStyles: [
      { cellWidth: 10 },
      { cellWidth: 30 },
      { cellWidth: 50 },
      { cellWidth: 12 },
      { cellWidth: 12 },
      { cellWidth: 12 },
      { cellWidth: 20 },
      { cellWidth: 20 },
      { cellWidth: 10 },
      { cellWidth: 10 },
      { cellWidth: 10 },
      { cellWidth: 25 },
      { cellWidth: 25 },
      { cellWidth: 10 },
      { cellWidth: 10 },
    ],
    useCss: true,
    didDrawCell: function (data) {
      if (data.section !== 'body')
        return

      if (data.column.index === 2)
        renderImage(doc, data)
      else if ([11, 12].indexOf(data.column.index) !== -1)
        renderTextField(doc, data)
      else if ([13, 14].indexOf(data.column.index) !== -1)
        renderCheckBox(doc, data)
    },
    didDrawPage: function (data) {
      drawHeader(doc, data)
    }
  })

  signField(doc, "M. Defit Hermanto")

  const document_name = typeof arg === "string" ? arg : "Generate Document"

  doc.save(`${document_name}.pdf`)
}

</script>

<template>
  <div class="flex gap-2 p-2 justify-center">
    <button class="btn" @click="downloadPDF">Download PDF</button>

    <button class="btn btn-warning" onclick="document_name_modal.showModal()">Sign Request</button>
    <dialog id="document_name_modal" class="modal modal-bottom sm:modal-middle">
      <div class="modal-box">
        <h3 class="text-lg font-bold">Hello!</h3>
        <p class="py-4">Press ESC key or click the button below to close</p>
        <div class="modal-action">
          <form method="dialog">
            <!-- if there is a button in form, it will close the modal -->
            <button class="btn">Close</button>
          </form>
        </div>
      </div>
    </dialog>
  </div>
</template>
